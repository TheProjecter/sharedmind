/*FreeMind - A Program for creating and viewing Mindmaps
 *Copyright (C) 2000-2004  Joerg Mueller, Daniel Polansky, Christian Foltin and others.
 *
 *See COPYING for Details
 *
 *This program is free software; you can redistribute it and/or
 *modify it under the terms of the GNU General Public License
 *as published by the Free Software Foundation; either version 2
 *of the License, or (at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *GNU General Public License for more details.
 *
 *You should have received a copy of the GNU General Public License
 *along with this program; if not, write to the Free Software
 *Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * Created on 25.08.2004
 */
/*$Id: MacChanges.java.not_here,v 1.1.4.6.2.5 2006/12/02 22:12:19 christianfoltin Exp $*/
package accessories.plugins;

import java.io.File;
import java.util.logging.Logger;

import javax.swing.SwingUtilities;

import com.apple.eawt.Application;
import com.apple.eawt.ApplicationAdapter;
import com.apple.eawt.ApplicationEvent;

import freemind.controller.Controller;
import freemind.controller.Controller.LocalLinkConverter;
import freemind.main.FreeMindCommon;
import freemind.main.FreeMindMain;
import freemind.modes.ModeController;

/** This plugin changes some things for mac users.
 * @author foltin
 */
public class MacChanges extends ApplicationAdapter  {

	private static final String FREE_MIND_JAVA = "FreeMind.app/Contents/Resources/Java";

	private Logger logger;
	
	private static Application fmMacApplication;

	private final FreeMindMain mFrame;

	public MacChanges(FreeMindMain pFrame) {
		mFrame = pFrame;
		logger = pFrame.getLogger(this.getClass().getName());
		logger.info("Performing Mac Changes.");
		pFrame.setProperty("keystroke_add_child", pFrame.getProperty("keystroke_add_child_mac"));
		Controller.localDocumentationLinkConverter = new LocalLinkConverter(){

			public String convertLocalLink(String link) {
				return "file:" + System.getProperty("user.dir")
				//TODO: retrieve name of application and don't use the fixed FreeMind.app here.
						+ "/" +
								FREE_MIND_JAVA + "/" + link;
			}}; 
		if(fmMacApplication==null){
			logger.info("Adding application listener.");
			fmMacApplication = Application.getApplication();
			fmMacApplication.addApplicationListener(this);
			fmMacApplication.addPreferencesMenuItem();
			fmMacApplication.addAboutMenuItem();
			fmMacApplication.setEnabledPreferencesMenu(true);
//			fmMacApplication.removePreferencesMenuItem();
		}
		logger.info("Performed Mac Changes.");
	}


	public void handleQuit(ApplicationEvent event) {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				mFrame.getController().quit.actionPerformed(null);
			}
		});
		event.setHandled(true);
		throw new IllegalStateException("Stop Pending User Confirmation");
	}

	public void handleAbout(ApplicationEvent event) {
		mFrame.getController().about.actionPerformed(null);
		event.setHandled(true);
	}
	public void handleOpenFile(final ApplicationEvent event) {
		try {
		logger.info("Later loading " + event.getFilename());
		// no restore at startup:
		mFrame.setProperty(FreeMindCommon.ON_START_IF_NOT_SPECIFIED, "");
		logger.info("Later loading (2) " + event.getFilename());
//		SwingUtilities.invokeLater(new Runnable(){
//
//			public void run() {
					logger.info("Try to load " + event.getFilename());
					mFrame.getController().getModeController().load(new File(event.getFilename()).toURL());
//			}});
		event.setHandled(true);
		} catch (Exception e) {
			freemind.main.Resources.getInstance().logException(e);
		} 
	}
	
	public void handlePreferences(ApplicationEvent event) {
		mFrame.getController().propertyAction.actionPerformed(null);
		event.setHandled(true);
	}
}